!* ========================================================================== *
!*                                                                            *
!* Copyright (C) 2020 Intel Corporation                                       *
!* This file is part of the DMR library.                                      *
!*                                                                            *
!* For information on the license, see the LICENSE file.                      *
!* Further information: https://github.com/giacrossi/dmr/                     *
!* SPDX-License-Identifier: BSD-3-Clause                                      *
!*                                                                            *
!* ========================================================================== *
!* Giacomo Rossi (Intel Corporation)                                          *
!* ========================================================================== *

submodule (dmr) dmr_target_is_present
   use dmr_environment

   implicit none

   contains

{%- for t in types %}
      ! OpenMP Target Is Present {{keywords[t][0]}} Routines
{%- for p in kinds[t] %}
{%- if p.key=='16P' %}
#if defined _real128
{%- endif %}
      module function omp_target_is_present_f_{{keywords[t][1]}}{{p.name}}(fptr_dev)
         implicit none
         logical                           :: omp_target_is_present_f_{{keywords[t][1]}}{{p.name}}
         {{t}}({{keywords[t][2]}}{{p.key}}), pointer, intent(in){% if t=='real' and p.key=='16P' %}{% print('    ')%}{%- elif t=='complex' and p.key=='16P' %}{% print(' ')%}{%- elif t=='real' %}{% print('     ')%}{%- else %}{% print('  ')%}{%- endif %}:: fptr_dev(..)

         if (associated(fptr_dev)) then
            omp_target_is_present_f_{{keywords[t][1]}}{{p.name}} = .true.
         else
            omp_target_is_present_f_{{keywords[t][1]}}{{p.name}} = .false.
         endif
      endfunction omp_target_is_present_f_{{keywords[t][1]}}{{p.name}}
{%- if p.key=='16P' %}
#endif
{%- endif %}
!
{%- endfor %}
!
{%- endfor %}
endsubmodule dmr_target_is_present
